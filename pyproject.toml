[project]
name = "trading-agent-with-mcps"
version = "1.0.0"
description = "ðŸ¤– AI Trading Agents with Real-Time Streaming Dashboard - Four unique AI personalities trading autonomously with professional-grade tools"
readme = "README.md"
license = { file = "LICENSE" }
authors = [
    { name = "Trading Agent Community", email = "support@your-domain.com" },
]
maintainers = [
    { name = "Trading Agent Community", email = "support@your-domain.com" },
]
requires-python = ">=3.12"
keywords = [
    "ai",
    "trading",
    "agents", 
    "mcp",
    "finance",
    "real-time",
    "dashboard",
    "gradio",
    "openai",
    "technical-analysis",
    "portfolio-management",
    "automated-trading"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]

dependencies = [
    "anthropic>=0.49.0",
    "autogen-agentchat>=0.4.9.2",
    "autogen-ext[grpc,mcp,ollama,openai]>=0.4.9.2",
    "bs4>=0.0.2",
    "gradio>=5.22.0",
    "httpx>=0.28.1",
    "ipywidgets>=8.1.5",
    "langchain-anthropic>=0.3.10",
    "langchain-community>=0.3.20",
    "langchain-experimental>=0.3.4",
    "langchain-openai>=0.3.9",
    "langgraph>=0.3.18",
    "langgraph-checkpoint-sqlite>=2.0.6",
    "lxml>=5.3.1",
    "mcp-server-fetch>=2025.1.17",
    "mcp-trader",
    "mcp[cli]>=1.5.0",
    "openai>=1.68.2",
    "openai-agents>=0.0.15",
    "playwright>=1.51.0",
    "plotly>=6.0.1",
    "polygon-api-client>=1.14.5",
    "psutil>=7.0.0",
    "pypdf>=5.4.0",
    "pypdf2>=3.0.1",
    "python-dotenv>=1.0.1",
    "requests>=2.32.3",
    "semantic-kernel>=1.25.0",
    "sendgrid>=6.11.0",
    "setuptools>=78.1.0",
    "smithery>=0.1.0",
    "speedtest-cli>=2.1.3",
    "wikipedia>=1.4.0",
]

[project.optional-dependencies]
dev = [
    "black>=24.0.0",
    "flake8>=7.0.0",
    "isort>=5.13.0",
    "mypy>=1.8.0",
    "pre-commit>=3.6.0",
    "pytest>=8.0.0",
    "pytest-cov>=4.0.0",
    "pytest-xdist>=3.5.0",
    "pytest-mock>=3.12.0",
]
test = [
    "pytest>=8.0.0",
    "pytest-cov>=4.0.0",
    "pytest-xdist>=3.5.0",
    "pytest-mock>=3.12.0",
    "pytest-asyncio>=0.23.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.5.0",
    "mkdocs-mermaid2-plugin>=1.1.0",
    "mkdocstrings[python]>=0.24.0",
]

[project.urls]
Homepage = "https://github.com/your-username/Trading-Agent-with-MCPs"
Documentation = "https://github.com/your-username/Trading-Agent-with-MCPs/wiki"
Repository = "https://github.com/your-username/Trading-Agent-with-MCPs"
"Bug Tracker" = "https://github.com/your-username/Trading-Agent-with-MCPs/issues"
Changelog = "https://github.com/your-username/Trading-Agent-with-MCPs/blob/main/CHANGELOG.md"
Discussions = "https://github.com/your-username/Trading-Agent-with-MCPs/discussions"
Discord = "https://discord.gg/your-server"
Funding = "https://github.com/sponsors/your-username"

[dependency-groups]
dev = [
    "ipykernel>=6.29.5",
    "black>=24.0.0",
    "flake8>=7.0.0",
    "isort>=5.13.0",
    "mypy>=1.8.0",
    "pre-commit>=3.6.0",
]

[tool.uv.sources]
mcp-trader = { path = "mcp-trader/dist/mcp_trader-0.3.0-py3-none-any.whl" }

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
skip-string-normalization = true
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | mcp-trader
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
skip_glob = ["mcp-trader/*"]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503", "E501"]
exclude = [
    ".git",
    "__pycache__",
    ".venv",
    "build",
    "dist",
    "mcp-trader",
]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
exclude = [
    "mcp-trader/",
    "build/",
    "dist/",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "api: marks tests that require API keys",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.coverage.run]
source = ["."]
omit = [
    "tests/*",
    "mcp-trader/*",
    ".venv/*",
    "build/*",
    "dist/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

